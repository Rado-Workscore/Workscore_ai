from fastapi import APIRouter, Depends, HTTPException, Query
from typing import List

from backend.schemas.video import VideoCreate, VideoOut
from backend.auth.dependencies import get_current_user, TokenData
from backend.services.video_service import create_video, get_videos_by_warehouse

router = APIRouter(
    prefix="/videos",
    tags=["Videos"]
)

# ðŸŸ¢ ÕŽÕ«Õ¤Õ¥Õ¸ Õ¾Õ¥Ö€Õ¢Õ¥Õ¼Õ¶Õ¸Ö‚Õ´
@router.post("/upload", response_model=VideoOut)
def upload_video(
    data: VideoCreate,
    current_user: TokenData = Depends(get_current_user)
):
    if current_user.role != "admin":
        raise HTTPException(status_code=403, detail="Õ„Õ«Õ¡ÕµÕ¶ Õ¡Õ¤Õ´Õ«Õ¶Õ¨ Õ¯Õ¡Ö€Õ¸Õ² Õ§ Õ¾Õ«Õ¤Õ¥Õ¸ Õ¾Õ¥Ö€Õ¢Õ¥Õ¼Õ¶Õ¥Õ¬Ö‰")

    return create_video(data)

# ðŸ”µ ÕŽÕ«Õ¤Õ¥Õ¸Õ¶Õ¥Ö€Õ« Õ¢Õ¥Ö€Õ¸Ö‚Õ´ Õ¨Õ½Õ¿ ÕºÕ¡Õ°Õ¥Õ½Õ¿Õ«
@router.get("/", response_model=List[VideoOut])
def get_videos(
    warehouse_id: int = Query(..., description="ÕŠÕ¡Õ°Õ¥Õ½Õ¿Õ« ID"),
    current_user: TokenData = Depends(get_current_user)
):
    if current_user.role not in ["admin", "manager"]:
        raise HTTPException(status_code=403, detail="Õ„Õ¸Ö‚Õ¿Ö„Õ¨ Õ¡Ö€Õ£Õ¥Õ¬Õ¾Õ¡Õ® Õ§Ö‰")

    return get_videos_by_warehouse(warehouse_id)

