import json
import numpy as np
from sklearn.cluster import DBSCAN
from sklearn.metrics.pairwise import cosine_distances
import os

# üì• Input embeddings
INPUT_PATH = "data/cache/warehouse_1/new_video/embeddings/mean_embeddings.json"
# üì§ Output clustered IDs
OUTPUT_PATH = "data/cache/warehouse_1/new_video/embeddings/dbscan_clusters.json"

# ‘≤’•’º’∂’∏÷Ç’¥ ’•’∂÷Ñ embedding-’∂’•÷Ä’®
with open(INPUT_PATH, "r") as f:
    data = json.load(f)

ids = list(data.keys())
embeddings = np.array([data[i] for i in ids])

# ’Ä’°’∑’æ’∏÷Ç’¥ ’•’∂÷Ñ cosine ’∞’•’º’°’æ’∏÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä
distance_matrix = cosine_distances(embeddings)

# ü§ñ ‘ø’´÷Ä’°’º’∏÷Ç’¥ ’•’∂÷Ñ DBSCAN’ù Cosine ’∞’•’º’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’æ÷Ä’°
clustering = DBSCAN(eps=0.111, min_samples=1, metric="precomputed")
labels = clustering.fit_predict(distance_matrix)

# ’ä’°’ø÷Ä’°’Ω’ø’∏÷Ç’¥ ’•’∂÷Ñ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’®’ù ’®’Ω’ø ’≠’¥’¢’•÷Ä’´
clusters = {}
for idx, label in enumerate(labels):
    cluster_name = f"cluster_{label}"
    clusters.setdefault(cluster_name, []).append(ids[idx])

# ’ä’°’∞’∫’°’∂’∏÷Ç’¥ ’•’∂÷Ñ
os.makedirs(os.path.dirname(OUTPUT_PATH), exist_ok=True)
with open(OUTPUT_PATH, "w") as f:
    json.dump(clusters, f, indent=2)

print(f"‚úÖ DBSCAN ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’® ’∫’°’∞’∫’°’∂’æ’•÷Å’ù {OUTPUT_PATH}")
print(f"üì¶ ’ç’ø’°÷Å’æ’•÷Å {len(clusters)} ’≠’∏÷Ç’¥’¢")
